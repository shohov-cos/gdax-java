plugins {
    id "com.github.johnrengelman.shadow" version "6.1.0" apply false
    id 'maven-publish'
}

apply plugin: 'com.github.johnrengelman.shadow'

wrapper {
    distributionType = Wrapper.DistributionType.ALL
}

allprojects {
    apply plugin: 'java-library'
    apply plugin: 'maven-publish'

    group = 'com.coinbase.pro'
    description = 'Client for the Coinbase Pro API'

    repositories {
        mavenCentral()
    }

    publishing {
        publications {
            coinbase(MavenPublication) {
                from components.java
            }
        }

        repositories {
            maven {
                url publishMavenURL
                credentials {
                    username = publishMavenUsername
                    password = publishMavenPassword
                }
            }
        }
    }
}

subprojects {

    java {
        sourceCompatibility = JavaVersion.VERSION_11
        targetCompatibility = JavaVersion.VERSION_11
    }

    dependencies {
        testImplementation(platform('org.junit:junit-bom:5.7.2'))

        constraints {
            api 'com.fasterxml.jackson.core:jackson-core:2.12.5'
            api 'com.fasterxml.jackson.core:jackson-databind:2.12.5'
            api 'com.fasterxml.jackson.core:jackson-annotations:2.12.5'
            api 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.12.5'
            api 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.12.5'
            api 'org.slf4j:slf4j-api:1.7.28'

            // --------------------------------------
            testImplementation 'org.springframework.boot:spring-boot-test:2.2.7.RELEASE'
            testImplementation 'org.springframework.boot:spring-boot-starter-test:2.2.7.RELEASE'

            testImplementation 'ch.qos.logback:logback-classic:1.2.3'
            testImplementation 'ch.qos.logback:logback-core:1.2.3'

            testImplementation 'org.mockito:mockito-core:3.0.0'
            testImplementation 'org.mockito:mockito-junit-jupiter:3.0.0'

            testImplementation 'org.assertj:assertj-core:3.13.2'
        }
    }

    test {
        useJUnitPlatform()
        filter {
            includeTestsMatching '*Test'
            excludeTestsMatching '*IntegrationTest'
        }
    }

    /**
     * User can run these as optional against the sandbox api exchange
     **/
    task integrationTest(type: Test) {
        useJUnitPlatform()
        filter {
            includeTestsMatching '*IntegrationTest'

            failOnNoMatchingTests false
        }
    }
}

dependencies {
    api project(":api")
    api project(":model")
    api project(":security")
    api project(":websocketfeed")
}
